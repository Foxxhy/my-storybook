import{j as v}from"./jsx-runtime-DQ32znRX.js";import"./index-DH5ua8nC.js";import"./_commonjsHelpers-Cpj98o6Y.js";const o=({type:c="success",weight:l=void 0,outline:d=!1,full:m=!1,children:p})=>{const f=`f-badge${d?"-outline":""}-${c||"success"}`,h=l&&l!=="unset"?` f-weight-${l}`:"",g=m?" f-width-full":"";return v.jsx("span",{className:f+h+g,children:p||"Lorem Ipsum Factum"})};o.__docgenInfo={description:"The Badge component is used to display a small piece of information, typically containing a status, number, or icon. It can be customized to represent different types of badges.\nThe Badge component accepts the following props:\n\n- `type`: Specifies the type of badge.\n- `weight`: Specifies the weight of the badge text. \n- `outline`: A boolean value indicating whether the badge should have an outline. Defaults to false.\n- `full`: A boolean value indicating whether the badge should expand to fill its container's width. Defaults to false.\n- `children`: The content to be displayed inside the badge.",methods:[],displayName:"Badge",props:{type:{required:!1,tsType:{name:"union",raw:"'success' | 'info' | 'warning' | 'danger' | 'primary' | 'secondary'| 'dark'",elements:[{name:"literal",value:"'success'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'dark'"}]},description:"",defaultValue:{value:"'success'",computed:!1}},weight:{required:!1,tsType:{name:"union",raw:"'thin' | '100' | '200' | '300' | '400' | '500 ' | 'normal' | '600' | 'bold' | '700' | '800' | 'bolder' | '900' | 'unset'",elements:[{name:"literal",value:"'thin'"},{name:"literal",value:"'100'"},{name:"literal",value:"'200'"},{name:"literal",value:"'300'"},{name:"literal",value:"'400'"},{name:"literal",value:"'500 '"},{name:"literal",value:"'normal'"},{name:"literal",value:"'600'"},{name:"literal",value:"'bold'"},{name:"literal",value:"'700'"},{name:"literal",value:"'800'"},{name:"literal",value:"'bolder'"},{name:"literal",value:"'900'"},{name:"literal",value:"'unset'"}]},description:"",defaultValue:{value:"undefined",computed:!0}},outline:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},full:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const T={title:"Atoms/Badge",component:o,tags:["autodocs"],args:{type:"success",outline:!1,weight:void 0,full:!1,children:"My Button"}},e={args:{type:"success",weight:void 0,outline:!1,full:!1,children:"Lorem Ipsum Factum"}},a={args:{type:"success",weight:void 0,outline:!0,full:!1,children:"Lorem Ipsum Factum"}};var t,n,s;e.parameters={...e.parameters,docs:{...(t=e.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    type: 'success',
    weight: undefined,
    outline: false,
    full: false,
    children: 'Lorem Ipsum Factum'
  }
}`,...(s=(n=e.parameters)==null?void 0:n.docs)==null?void 0:s.source}}};var r,i,u;a.parameters={...a.parameters,docs:{...(r=a.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    type: 'success',
    weight: undefined,
    outline: true,
    full: false,
    children: 'Lorem Ipsum Factum'
  }
}`,...(u=(i=a.parameters)==null?void 0:i.docs)==null?void 0:u.source}}};const x=["Default","Outline"];export{e as Default,a as Outline,x as __namedExportsOrder,T as default};
